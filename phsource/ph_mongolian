
phoneme a
  vwl starttype #a endtype #a
  IF nextPhW(isPause) THEN
    length 80
  ELSE
    length 140
  ENDIF
  FMT(vowel/aa_9)
endphoneme

phoneme e
  vwl starttype #e endtype #e
  length 200
  IF thisPh(isTranslationGiven) THEN
    // don't reduce the vowel if phonemes are explicitly given
  ELSE
    IF nextPh(isWordEnd) OR next2PhW(isNotVowel) THEN
      IF nextPh(isRhotic) OR nextPh(isNasal) OR nextPh(l) OR nextPh(L) THEN
        ChangePhoneme(&)
      ENDIF
    ENDIF

    IF thisPh(isFinalVowel) THEN
      ChangePhoneme(E)
    ENDIF
    IF nextPh(isNotVowel) AND next2Ph(isNotVowel) THEN
      ChangePhoneme(E)
    ENDIF
  ENDIF
  FMT(vowel/e)
endphoneme

phoneme E
  vwl starttype #e endtype #e
  length 200
  FMT(vowel/e_mid)
endphoneme

phoneme i
  vwl starttype #i endtype #i
  length 170
  IfNextVowelAppend(;)
  FMT(vowel/i)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  length 200
  IF thisPh(isTranslationGiven) THEN
    // don't reduce the vowel if phonemes are explicitly given
  ELSE
    IF thisPh(isFinalVowel) THEN
      ChangePhoneme(O)
    ENDIF
    IF nextPh(isNotVowel) AND next2Ph(isNotVowel) THEN
      ChangePhoneme(O)
    ENDIF
  ENDIF
  FMT(vowel/o_mid)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 180
  IF thisPh(isTranslationGiven) THEN
    // don't reduce the vowel if phonemes are explicitly given
  ELSE
    IF thisPh(isFinalVowel) THEN
      ChangePhoneme(U)
    ENDIF
    IF nextPh(isNotVowel) AND next2Ph(isNotVowel) THEN
      ChangePhoneme(U)
    ENDIF
  ENDIF
  FMT(vowel/u_2)
endphoneme

phoneme W
  vwl starttype #@ endtype #@
  length 200
  FMT(vowel/y#)
endphoneme

phoneme y
  vwl starttype #u endtype #u
  length 180
  IF thisPh(isTranslationGiven) THEN
  ELSE
    IF thisPh(isFinalVowel) THEN
      ChangePhoneme(Y)
    ENDIF
    IF nextPh(isNotVowel) AND next2Ph(isNotVowel) THEN
      ChangePhoneme(Y)
    ENDIF
  ENDIF
  FMT(vowel/y_5)
endphoneme

// ========== //
// CONSONANTS //
// ========== //

phoneme x2
  vls vel frc
  Vowelin f1=0  f2=2300 200 400  f3=-100 100
  Vowelout f1=0 f2=2300 300 400  f3=-100 100  rms=20
  lengthmod 3
  WAV(ufric/x2, 60)      // stronger version of [x]
endphoneme

phoneme X
  ipa X
  vls uvl frc
  voicingswitch Q"
  lengthmod 3

  IF nextPh(isPause) THEN
    WAV(ufric/xx, 70)
  ENDIF
  WAV(ufric/xx,80)
endphoneme

phoneme t        // dental /t/
  ipa t[
  vls dnt stp
  voicingswitch d
  lengthmod 2
  Vowelin f1=1  f2=1500 -250 250  f3=-100 80  amp=16
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20

  IF nextPh(isPause2) THEN
    WAV(ustop/t_dnt, 35)
  ENDIF
  WAV(ustop/t_dnt, 70)
endphoneme
