//====================================================
//  Belarusian
//====================================================


phoneme a
  import_phoneme ru/a
endphoneme

phoneme O
  vwl starttype #o endtype #o
  ipa ɔ
  length 100
  FMT(vwl_ru/8)
endphoneme

phoneme i"
  import_phoneme pl/y
endphoneme

phoneme ts
  vls alv afr sib
  import_phoneme consonants/ts
  ipa t̻͡s
  voicingswitch dz
  lengthmod 2
  Vowelin f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0 f2=1700 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/ts_)
  ENDIF
  WAV(ustop/ts)
endphoneme

phoneme t;
  import_phoneme pl/t;
endphoneme

phoneme ts. 
  import_phoneme sr/tS
  ipa ʈ͡ʂ
  vls pla frc sib
  lengthmod 3
  Vowelin  f1=0  f2=1800 -100 300  f3=-300 80
  Vowelout f1=0  f2=1800 -100 300  f3=-300 80
  WAV(ustop/ts_rfx_unasp) 
endphoneme

phoneme dz
  vcd alv afr sib
  import_phoneme consonants/dz
  ipa d̻͡z̪
  voicingswitch ts
  lengthmod 5
  Vowelin f1=1  f2=1700 -300 300  f3=-100 80 len=50
  Vowelout f1=2 f2=1700 -300 300  f3=-100 80

  IF PreVoicing THEN
    FMT(d/xd)
  ENDIF

  IF nextPh(isPause2) THEN
    FMT(voc/z_) addWav(ustop/ts_, 60)
  ENDIF
  FMT(d/xdz) addWav(ustop/ts, 140)
endphoneme

phoneme d;
  import_phoneme pl/d;
endphoneme

phoneme dz.
import_phoneme sr/dZ
  ipa ɖ͡ʐ
 vcd pla afr sib
  lengthmod 5
  voicingswitch tS
  Vowelin f1=2  f2=1900 100 300  f3=100 80
  Vowelout f1=2  f2=1900 100 300  f3=100 80 brk

  IF PreVoicing THEN
    FMT(dzh/xdzh)
  ENDIF

  IF nextPh(isPause2) THEN
    FMT(dzh/dzh_) addWav(ustop/tsh2, 50)
  ENDIF
  FMT(dzh/dzh2) addWav(ustop/tsh2, 80)
endphoneme
